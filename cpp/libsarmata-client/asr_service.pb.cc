// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: asr_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "asr_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace sarmata {
class RecognizeRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RecognizeRequest>
     _instance;
} _RecognizeRequest_default_instance_;
class ConfigFieldDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConfigField>
     _instance;
} _ConfigField_default_instance_;
class InitialRecognizeRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InitialRecognizeRequest>
     _instance;
} _InitialRecognizeRequest_default_instance_;
class AudioRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AudioRequest>
     _instance;
} _AudioRequest_default_instance_;
class DefineGrammarRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DefineGrammarRequest>
     _instance;
} _DefineGrammarRequest_default_instance_;
class DefineGrammarResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DefineGrammarResponse>
     _instance;
} _DefineGrammarResponse_default_instance_;
class RecognizeResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RecognizeResponse>
     _instance;
} _RecognizeResponse_default_instance_;
class Phrase_WordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Phrase_Word>
     _instance;
} _Phrase_Word_default_instance_;
class PhraseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Phrase>
     _instance;
} _Phrase_default_instance_;

namespace protobuf_asr_5fservice_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeRequest, initial_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeRequest, audio_request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigField, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigField, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitialRecognizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitialRecognizeRequest, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitialRecognizeRequest, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AudioRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AudioRequest, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AudioRequest, end_of_stream_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefineGrammarRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefineGrammarRequest, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefineGrammarRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefineGrammarRequest, grammar_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefineGrammarResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefineGrammarResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefineGrammarResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefineGrammarResponse, ok_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeResponse, warning_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeResponse, event_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecognizeResponse, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase_Word, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase_Word, transcript_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase_Word, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase_Word, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase_Word, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase_Word, logprob_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase, words_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase, correct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phrase, semantic_interpretation_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(RecognizeRequest)},
  { 7, -1, sizeof(ConfigField)},
  { 14, -1, sizeof(InitialRecognizeRequest)},
  { 21, -1, sizeof(AudioRequest)},
  { 28, -1, sizeof(DefineGrammarRequest)},
  { 36, -1, sizeof(DefineGrammarResponse)},
  { 44, -1, sizeof(RecognizeResponse)},
  { 54, -1, sizeof(Phrase_Word)},
  { 64, -1, sizeof(Phrase)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RecognizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InitialRecognizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AudioRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DefineGrammarRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DefineGrammarResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RecognizeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Phrase_Word_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Phrase_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "asr_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _RecognizeRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RecognizeRequest_default_instance_);_ConfigField_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConfigField_default_instance_);_InitialRecognizeRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InitialRecognizeRequest_default_instance_);_AudioRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AudioRequest_default_instance_);_DefineGrammarRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DefineGrammarRequest_default_instance_);_DefineGrammarResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DefineGrammarResponse_default_instance_);_RecognizeResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RecognizeResponse_default_instance_);_Phrase_Word_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Phrase_Word_default_instance_);_Phrase_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Phrase_default_instance_);_RecognizeRequest_default_instance_._instance.get_mutable()->initial_request_ = const_cast< ::sarmata::InitialRecognizeRequest*>(
      ::sarmata::InitialRecognizeRequest::internal_default_instance());
  _RecognizeRequest_default_instance_._instance.get_mutable()->audio_request_ = const_cast< ::sarmata::AudioRequest*>(
      ::sarmata::AudioRequest::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021asr_service.proto\022\007sarmata\"{\n\020Recogniz"
      "eRequest\0229\n\017initial_request\030\001 \001(\0132 .sarm"
      "ata.InitialRecognizeRequest\022,\n\raudio_req"
      "uest\030\002 \001(\0132\025.sarmata.AudioRequest\")\n\013Con"
      "figField\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"N\n\027"
      "InitialRecognizeRequest\022$\n\006config\030\001 \003(\0132"
      "\024.sarmata.ConfigField\022\r\n\005token\030\002 \001(\t\"6\n\014"
      "AudioRequest\022\017\n\007content\030\001 \001(\014\022\025\n\rend_of_"
      "stream\030\002 \001(\010\"D\n\024DefineGrammarRequest\022\r\n\005"
      "token\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\017\n\007grammar\030\003 \001"
      "(\t\"[\n\025DefineGrammarResponse\022\'\n\006status\030\001 "
      "\001(\0162\027.sarmata.ResponseStatus\022\r\n\005error\030\002 "
      "\001(\t\022\n\n\002ok\030\003 \001(\010\"\222\001\n\021RecognizeResponse\022\'\n"
      "\006status\030\001 \001(\0162\027.sarmata.ResponseStatus\022\r"
      "\n\005error\030\002 \001(\t\022\017\n\007warning\030\003 \001(\t\022\022\n\nevent_"
      "time\030\004 \001(\005\022 \n\007results\030\005 \003(\0132\017.sarmata.Ph"
      "rase\"\320\001\n\006Phrase\022#\n\005words\030\001 \003(\0132\024.sarmata"
      ".Phrase.Word\022\022\n\nconfidence\030\002 \001(\001\022\017\n\007corr"
      "ect\030\003 \001(\010\022\037\n\027semantic_interpretation\030\004 \001"
      "(\t\032[\n\004Word\022\022\n\ntranscript\030\001 \001(\t\022\022\n\nconfid"
      "ence\030\002 \001(\001\022\r\n\005start\030\003 \001(\005\022\013\n\003end\030\004 \001(\005\022\017"
      "\n\007logprob\030\005 \001(\001*\231\002\n\016ResponseStatus\022\t\n\005EM"
      "PTY\020\000\022\013\n\007SUCCESS\020\001\022\021\n\rPARTIAL_MATCH\020\002\022\014\n"
      "\010NO_MATCH\020\003\022\024\n\020NO_INPUT_TIMEOUT\020\004\022\030\n\024GRA"
      "MMAR_LOAD_FAILURE\020\005\022\037\n\033GRAMMAR_COMPILATI"
      "ON_FAILURE\020\006\022\024\n\020RECOGNIZER_ERROR\020\007\022\033\n\027TO"
      "O_MUCH_SPEECH_TIMEOUT\020\010\022\r\n\tCANCELLED\020\t\022\022"
      "\n\016START_OF_INPUT\020\n\022\020\n\014END_OF_AUDIO\020\013\022\025\n\021"
      "SEMANTICS_FAILURE\020\0142\235\001\n\003ASR\022F\n\tRecognize"
      "\022\031.sarmata.RecognizeRequest\032\032.sarmata.Re"
      "cognizeResponse(\0010\001\022N\n\rDefineGrammar\022\035.s"
      "armata.DefineGrammarRequest\032\036.sarmata.De"
      "fineGrammarResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1307);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "asr_service.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_asr_5fservice_2eproto

const ::google::protobuf::EnumDescriptor* ResponseStatus_descriptor() {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_enum_descriptors[0];
}
bool ResponseStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecognizeRequest::kInitialRequestFieldNumber;
const int RecognizeRequest::kAudioRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecognizeRequest::RecognizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_asr_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sarmata.RecognizeRequest)
}
RecognizeRequest::RecognizeRequest(const RecognizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_initial_request()) {
    initial_request_ = new ::sarmata::InitialRecognizeRequest(*from.initial_request_);
  } else {
    initial_request_ = NULL;
  }
  if (from.has_audio_request()) {
    audio_request_ = new ::sarmata::AudioRequest(*from.audio_request_);
  } else {
    audio_request_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sarmata.RecognizeRequest)
}

void RecognizeRequest::SharedCtor() {
  ::memset(&initial_request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audio_request_) -
      reinterpret_cast<char*>(&initial_request_)) + sizeof(audio_request_));
  _cached_size_ = 0;
}

RecognizeRequest::~RecognizeRequest() {
  // @@protoc_insertion_point(destructor:sarmata.RecognizeRequest)
  SharedDtor();
}

void RecognizeRequest::SharedDtor() {
  if (this != internal_default_instance()) delete initial_request_;
  if (this != internal_default_instance()) delete audio_request_;
}

void RecognizeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecognizeRequest::descriptor() {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecognizeRequest& RecognizeRequest::default_instance() {
  protobuf_asr_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

RecognizeRequest* RecognizeRequest::New(::google::protobuf::Arena* arena) const {
  RecognizeRequest* n = new RecognizeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecognizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sarmata.RecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && initial_request_ != NULL) {
    delete initial_request_;
  }
  initial_request_ = NULL;
  if (GetArenaNoVirtual() == NULL && audio_request_ != NULL) {
    delete audio_request_;
  }
  audio_request_ = NULL;
  _internal_metadata_.Clear();
}

bool RecognizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sarmata.RecognizeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sarmata.InitialRecognizeRequest initial_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initial_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sarmata.AudioRequest audio_request = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_audio_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sarmata.RecognizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sarmata.RecognizeRequest)
  return false;
#undef DO_
}

void RecognizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sarmata.RecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sarmata.InitialRecognizeRequest initial_request = 1;
  if (this->has_initial_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->initial_request_, output);
  }

  // .sarmata.AudioRequest audio_request = 2;
  if (this->has_audio_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->audio_request_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sarmata.RecognizeRequest)
}

::google::protobuf::uint8* RecognizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sarmata.RecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sarmata.InitialRecognizeRequest initial_request = 1;
  if (this->has_initial_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->initial_request_, deterministic, target);
  }

  // .sarmata.AudioRequest audio_request = 2;
  if (this->has_audio_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->audio_request_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sarmata.RecognizeRequest)
  return target;
}

size_t RecognizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sarmata.RecognizeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sarmata.InitialRecognizeRequest initial_request = 1;
  if (this->has_initial_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->initial_request_);
  }

  // .sarmata.AudioRequest audio_request = 2;
  if (this->has_audio_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->audio_request_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecognizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sarmata.RecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecognizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sarmata.RecognizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sarmata.RecognizeRequest)
    MergeFrom(*source);
  }
}

void RecognizeRequest::MergeFrom(const RecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sarmata.RecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_initial_request()) {
    mutable_initial_request()->::sarmata::InitialRecognizeRequest::MergeFrom(from.initial_request());
  }
  if (from.has_audio_request()) {
    mutable_audio_request()->::sarmata::AudioRequest::MergeFrom(from.audio_request());
  }
}

void RecognizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sarmata.RecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognizeRequest::CopyFrom(const RecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sarmata.RecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognizeRequest::IsInitialized() const {
  return true;
}

void RecognizeRequest::Swap(RecognizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecognizeRequest::InternalSwap(RecognizeRequest* other) {
  using std::swap;
  swap(initial_request_, other->initial_request_);
  swap(audio_request_, other->audio_request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecognizeRequest::GetMetadata() const {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecognizeRequest

// .sarmata.InitialRecognizeRequest initial_request = 1;
bool RecognizeRequest::has_initial_request() const {
  return this != internal_default_instance() && initial_request_ != NULL;
}
void RecognizeRequest::clear_initial_request() {
  if (GetArenaNoVirtual() == NULL && initial_request_ != NULL) delete initial_request_;
  initial_request_ = NULL;
}
const ::sarmata::InitialRecognizeRequest& RecognizeRequest::initial_request() const {
  const ::sarmata::InitialRecognizeRequest* p = initial_request_;
  // @@protoc_insertion_point(field_get:sarmata.RecognizeRequest.initial_request)
  return p != NULL ? *p : *reinterpret_cast<const ::sarmata::InitialRecognizeRequest*>(
      &::sarmata::_InitialRecognizeRequest_default_instance_);
}
::sarmata::InitialRecognizeRequest* RecognizeRequest::mutable_initial_request() {
  
  if (initial_request_ == NULL) {
    initial_request_ = new ::sarmata::InitialRecognizeRequest;
  }
  // @@protoc_insertion_point(field_mutable:sarmata.RecognizeRequest.initial_request)
  return initial_request_;
}
::sarmata::InitialRecognizeRequest* RecognizeRequest::release_initial_request() {
  // @@protoc_insertion_point(field_release:sarmata.RecognizeRequest.initial_request)
  
  ::sarmata::InitialRecognizeRequest* temp = initial_request_;
  initial_request_ = NULL;
  return temp;
}
void RecognizeRequest::set_allocated_initial_request(::sarmata::InitialRecognizeRequest* initial_request) {
  delete initial_request_;
  initial_request_ = initial_request;
  if (initial_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sarmata.RecognizeRequest.initial_request)
}

// .sarmata.AudioRequest audio_request = 2;
bool RecognizeRequest::has_audio_request() const {
  return this != internal_default_instance() && audio_request_ != NULL;
}
void RecognizeRequest::clear_audio_request() {
  if (GetArenaNoVirtual() == NULL && audio_request_ != NULL) delete audio_request_;
  audio_request_ = NULL;
}
const ::sarmata::AudioRequest& RecognizeRequest::audio_request() const {
  const ::sarmata::AudioRequest* p = audio_request_;
  // @@protoc_insertion_point(field_get:sarmata.RecognizeRequest.audio_request)
  return p != NULL ? *p : *reinterpret_cast<const ::sarmata::AudioRequest*>(
      &::sarmata::_AudioRequest_default_instance_);
}
::sarmata::AudioRequest* RecognizeRequest::mutable_audio_request() {
  
  if (audio_request_ == NULL) {
    audio_request_ = new ::sarmata::AudioRequest;
  }
  // @@protoc_insertion_point(field_mutable:sarmata.RecognizeRequest.audio_request)
  return audio_request_;
}
::sarmata::AudioRequest* RecognizeRequest::release_audio_request() {
  // @@protoc_insertion_point(field_release:sarmata.RecognizeRequest.audio_request)
  
  ::sarmata::AudioRequest* temp = audio_request_;
  audio_request_ = NULL;
  return temp;
}
void RecognizeRequest::set_allocated_audio_request(::sarmata::AudioRequest* audio_request) {
  delete audio_request_;
  audio_request_ = audio_request;
  if (audio_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:sarmata.RecognizeRequest.audio_request)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigField::kKeyFieldNumber;
const int ConfigField::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigField::ConfigField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_asr_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sarmata.ConfigField)
}
ConfigField::ConfigField(const ConfigField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:sarmata.ConfigField)
}

void ConfigField::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigField::~ConfigField() {
  // @@protoc_insertion_point(destructor:sarmata.ConfigField)
  SharedDtor();
}

void ConfigField::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigField::descriptor() {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigField& ConfigField::default_instance() {
  protobuf_asr_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigField* ConfigField::New(::google::protobuf::Arena* arena) const {
  ConfigField* n = new ConfigField;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigField::Clear() {
// @@protoc_insertion_point(message_clear_start:sarmata.ConfigField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ConfigField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sarmata.ConfigField)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sarmata.ConfigField.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sarmata.ConfigField.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sarmata.ConfigField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sarmata.ConfigField)
  return false;
#undef DO_
}

void ConfigField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sarmata.ConfigField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.ConfigField.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.ConfigField.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sarmata.ConfigField)
}

::google::protobuf::uint8* ConfigField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sarmata.ConfigField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.ConfigField.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.ConfigField.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sarmata.ConfigField)
  return target;
}

size_t ConfigField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sarmata.ConfigField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sarmata.ConfigField)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sarmata.ConfigField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sarmata.ConfigField)
    MergeFrom(*source);
  }
}

void ConfigField::MergeFrom(const ConfigField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sarmata.ConfigField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void ConfigField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sarmata.ConfigField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigField::CopyFrom(const ConfigField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sarmata.ConfigField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigField::IsInitialized() const {
  return true;
}

void ConfigField::Swap(ConfigField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigField::InternalSwap(ConfigField* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigField::GetMetadata() const {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigField

// string key = 1;
void ConfigField::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigField::key() const {
  // @@protoc_insertion_point(field_get:sarmata.ConfigField.key)
  return key_.GetNoArena();
}
void ConfigField::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.ConfigField.key)
}
#if LANG_CXX11
void ConfigField::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.ConfigField.key)
}
#endif
void ConfigField::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.ConfigField.key)
}
void ConfigField::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.ConfigField.key)
}
::std::string* ConfigField::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.ConfigField.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigField::release_key() {
  // @@protoc_insertion_point(field_release:sarmata.ConfigField.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigField::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:sarmata.ConfigField.key)
}

// string value = 2;
void ConfigField::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigField::value() const {
  // @@protoc_insertion_point(field_get:sarmata.ConfigField.value)
  return value_.GetNoArena();
}
void ConfigField::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.ConfigField.value)
}
#if LANG_CXX11
void ConfigField::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.ConfigField.value)
}
#endif
void ConfigField::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.ConfigField.value)
}
void ConfigField::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.ConfigField.value)
}
::std::string* ConfigField::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.ConfigField.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigField::release_value() {
  // @@protoc_insertion_point(field_release:sarmata.ConfigField.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigField::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:sarmata.ConfigField.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitialRecognizeRequest::kConfigFieldNumber;
const int InitialRecognizeRequest::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitialRecognizeRequest::InitialRecognizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_asr_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sarmata.InitialRecognizeRequest)
}
InitialRecognizeRequest::InitialRecognizeRequest(const InitialRecognizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      config_(from.config_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:sarmata.InitialRecognizeRequest)
}

void InitialRecognizeRequest::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InitialRecognizeRequest::~InitialRecognizeRequest() {
  // @@protoc_insertion_point(destructor:sarmata.InitialRecognizeRequest)
  SharedDtor();
}

void InitialRecognizeRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InitialRecognizeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitialRecognizeRequest::descriptor() {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InitialRecognizeRequest& InitialRecognizeRequest::default_instance() {
  protobuf_asr_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

InitialRecognizeRequest* InitialRecognizeRequest::New(::google::protobuf::Arena* arena) const {
  InitialRecognizeRequest* n = new InitialRecognizeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InitialRecognizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sarmata.InitialRecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool InitialRecognizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sarmata.InitialRecognizeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sarmata.ConfigField config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sarmata.InitialRecognizeRequest.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sarmata.InitialRecognizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sarmata.InitialRecognizeRequest)
  return false;
#undef DO_
}

void InitialRecognizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sarmata.InitialRecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sarmata.ConfigField config = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->config(static_cast<int>(i)), output);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.InitialRecognizeRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sarmata.InitialRecognizeRequest)
}

::google::protobuf::uint8* InitialRecognizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sarmata.InitialRecognizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sarmata.ConfigField config = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->config(static_cast<int>(i)), deterministic, target);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.InitialRecognizeRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sarmata.InitialRecognizeRequest)
  return target;
}

size_t InitialRecognizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sarmata.InitialRecognizeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .sarmata.ConfigField config = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->config_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->config(static_cast<int>(i)));
    }
  }

  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitialRecognizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sarmata.InitialRecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InitialRecognizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitialRecognizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sarmata.InitialRecognizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sarmata.InitialRecognizeRequest)
    MergeFrom(*source);
  }
}

void InitialRecognizeRequest::MergeFrom(const InitialRecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sarmata.InitialRecognizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_.MergeFrom(from.config_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void InitialRecognizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sarmata.InitialRecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitialRecognizeRequest::CopyFrom(const InitialRecognizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sarmata.InitialRecognizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitialRecognizeRequest::IsInitialized() const {
  return true;
}

void InitialRecognizeRequest::Swap(InitialRecognizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitialRecognizeRequest::InternalSwap(InitialRecognizeRequest* other) {
  using std::swap;
  config_.InternalSwap(&other->config_);
  token_.Swap(&other->token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InitialRecognizeRequest::GetMetadata() const {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InitialRecognizeRequest

// repeated .sarmata.ConfigField config = 1;
int InitialRecognizeRequest::config_size() const {
  return config_.size();
}
void InitialRecognizeRequest::clear_config() {
  config_.Clear();
}
const ::sarmata::ConfigField& InitialRecognizeRequest::config(int index) const {
  // @@protoc_insertion_point(field_get:sarmata.InitialRecognizeRequest.config)
  return config_.Get(index);
}
::sarmata::ConfigField* InitialRecognizeRequest::mutable_config(int index) {
  // @@protoc_insertion_point(field_mutable:sarmata.InitialRecognizeRequest.config)
  return config_.Mutable(index);
}
::sarmata::ConfigField* InitialRecognizeRequest::add_config() {
  // @@protoc_insertion_point(field_add:sarmata.InitialRecognizeRequest.config)
  return config_.Add();
}
::google::protobuf::RepeatedPtrField< ::sarmata::ConfigField >*
InitialRecognizeRequest::mutable_config() {
  // @@protoc_insertion_point(field_mutable_list:sarmata.InitialRecognizeRequest.config)
  return &config_;
}
const ::google::protobuf::RepeatedPtrField< ::sarmata::ConfigField >&
InitialRecognizeRequest::config() const {
  // @@protoc_insertion_point(field_list:sarmata.InitialRecognizeRequest.config)
  return config_;
}

// string token = 2;
void InitialRecognizeRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InitialRecognizeRequest::token() const {
  // @@protoc_insertion_point(field_get:sarmata.InitialRecognizeRequest.token)
  return token_.GetNoArena();
}
void InitialRecognizeRequest::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.InitialRecognizeRequest.token)
}
#if LANG_CXX11
void InitialRecognizeRequest::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.InitialRecognizeRequest.token)
}
#endif
void InitialRecognizeRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.InitialRecognizeRequest.token)
}
void InitialRecognizeRequest::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.InitialRecognizeRequest.token)
}
::std::string* InitialRecognizeRequest::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.InitialRecognizeRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitialRecognizeRequest::release_token() {
  // @@protoc_insertion_point(field_release:sarmata.InitialRecognizeRequest.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitialRecognizeRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:sarmata.InitialRecognizeRequest.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AudioRequest::kContentFieldNumber;
const int AudioRequest::kEndOfStreamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AudioRequest::AudioRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_asr_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sarmata.AudioRequest)
}
AudioRequest::AudioRequest(const AudioRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  end_of_stream_ = from.end_of_stream_;
  // @@protoc_insertion_point(copy_constructor:sarmata.AudioRequest)
}

void AudioRequest::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_of_stream_ = false;
  _cached_size_ = 0;
}

AudioRequest::~AudioRequest() {
  // @@protoc_insertion_point(destructor:sarmata.AudioRequest)
  SharedDtor();
}

void AudioRequest::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AudioRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AudioRequest::descriptor() {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AudioRequest& AudioRequest::default_instance() {
  protobuf_asr_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

AudioRequest* AudioRequest::New(::google::protobuf::Arena* arena) const {
  AudioRequest* n = new AudioRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AudioRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sarmata.AudioRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_of_stream_ = false;
  _internal_metadata_.Clear();
}

bool AudioRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sarmata.AudioRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool end_of_stream = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &end_of_stream_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sarmata.AudioRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sarmata.AudioRequest)
  return false;
#undef DO_
}

void AudioRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sarmata.AudioRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->content(), output);
  }

  // bool end_of_stream = 2;
  if (this->end_of_stream() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->end_of_stream(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sarmata.AudioRequest)
}

::google::protobuf::uint8* AudioRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sarmata.AudioRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->content(), target);
  }

  // bool end_of_stream = 2;
  if (this->end_of_stream() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->end_of_stream(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sarmata.AudioRequest)
  return target;
}

size_t AudioRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sarmata.AudioRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // bool end_of_stream = 2;
  if (this->end_of_stream() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AudioRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sarmata.AudioRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AudioRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sarmata.AudioRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sarmata.AudioRequest)
    MergeFrom(*source);
  }
}

void AudioRequest::MergeFrom(const AudioRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sarmata.AudioRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.end_of_stream() != 0) {
    set_end_of_stream(from.end_of_stream());
  }
}

void AudioRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sarmata.AudioRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioRequest::CopyFrom(const AudioRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sarmata.AudioRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioRequest::IsInitialized() const {
  return true;
}

void AudioRequest::Swap(AudioRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AudioRequest::InternalSwap(AudioRequest* other) {
  using std::swap;
  content_.Swap(&other->content_);
  swap(end_of_stream_, other->end_of_stream_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AudioRequest::GetMetadata() const {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AudioRequest

// bytes content = 1;
void AudioRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AudioRequest::content() const {
  // @@protoc_insertion_point(field_get:sarmata.AudioRequest.content)
  return content_.GetNoArena();
}
void AudioRequest::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.AudioRequest.content)
}
#if LANG_CXX11
void AudioRequest::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.AudioRequest.content)
}
#endif
void AudioRequest::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.AudioRequest.content)
}
void AudioRequest::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.AudioRequest.content)
}
::std::string* AudioRequest::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.AudioRequest.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AudioRequest::release_content() {
  // @@protoc_insertion_point(field_release:sarmata.AudioRequest.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AudioRequest::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:sarmata.AudioRequest.content)
}

// bool end_of_stream = 2;
void AudioRequest::clear_end_of_stream() {
  end_of_stream_ = false;
}
bool AudioRequest::end_of_stream() const {
  // @@protoc_insertion_point(field_get:sarmata.AudioRequest.end_of_stream)
  return end_of_stream_;
}
void AudioRequest::set_end_of_stream(bool value) {
  
  end_of_stream_ = value;
  // @@protoc_insertion_point(field_set:sarmata.AudioRequest.end_of_stream)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DefineGrammarRequest::kTokenFieldNumber;
const int DefineGrammarRequest::kNameFieldNumber;
const int DefineGrammarRequest::kGrammarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DefineGrammarRequest::DefineGrammarRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_asr_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sarmata.DefineGrammarRequest)
}
DefineGrammarRequest::DefineGrammarRequest(const DefineGrammarRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  grammar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.grammar().size() > 0) {
    grammar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grammar_);
  }
  // @@protoc_insertion_point(copy_constructor:sarmata.DefineGrammarRequest)
}

void DefineGrammarRequest::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grammar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DefineGrammarRequest::~DefineGrammarRequest() {
  // @@protoc_insertion_point(destructor:sarmata.DefineGrammarRequest)
  SharedDtor();
}

void DefineGrammarRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grammar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DefineGrammarRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DefineGrammarRequest::descriptor() {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DefineGrammarRequest& DefineGrammarRequest::default_instance() {
  protobuf_asr_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

DefineGrammarRequest* DefineGrammarRequest::New(::google::protobuf::Arena* arena) const {
  DefineGrammarRequest* n = new DefineGrammarRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DefineGrammarRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sarmata.DefineGrammarRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grammar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DefineGrammarRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sarmata.DefineGrammarRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sarmata.DefineGrammarRequest.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sarmata.DefineGrammarRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string grammar = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_grammar()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->grammar().data(), static_cast<int>(this->grammar().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sarmata.DefineGrammarRequest.grammar"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sarmata.DefineGrammarRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sarmata.DefineGrammarRequest)
  return false;
#undef DO_
}

void DefineGrammarRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sarmata.DefineGrammarRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.DefineGrammarRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.DefineGrammarRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string grammar = 3;
  if (this->grammar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grammar().data(), static_cast<int>(this->grammar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.DefineGrammarRequest.grammar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->grammar(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sarmata.DefineGrammarRequest)
}

::google::protobuf::uint8* DefineGrammarRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sarmata.DefineGrammarRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.DefineGrammarRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.DefineGrammarRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string grammar = 3;
  if (this->grammar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grammar().data(), static_cast<int>(this->grammar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.DefineGrammarRequest.grammar");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->grammar(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sarmata.DefineGrammarRequest)
  return target;
}

size_t DefineGrammarRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sarmata.DefineGrammarRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string grammar = 3;
  if (this->grammar().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->grammar());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DefineGrammarRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sarmata.DefineGrammarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DefineGrammarRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DefineGrammarRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sarmata.DefineGrammarRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sarmata.DefineGrammarRequest)
    MergeFrom(*source);
  }
}

void DefineGrammarRequest::MergeFrom(const DefineGrammarRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sarmata.DefineGrammarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.grammar().size() > 0) {

    grammar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grammar_);
  }
}

void DefineGrammarRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sarmata.DefineGrammarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefineGrammarRequest::CopyFrom(const DefineGrammarRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sarmata.DefineGrammarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefineGrammarRequest::IsInitialized() const {
  return true;
}

void DefineGrammarRequest::Swap(DefineGrammarRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DefineGrammarRequest::InternalSwap(DefineGrammarRequest* other) {
  using std::swap;
  token_.Swap(&other->token_);
  name_.Swap(&other->name_);
  grammar_.Swap(&other->grammar_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DefineGrammarRequest::GetMetadata() const {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DefineGrammarRequest

// string token = 1;
void DefineGrammarRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DefineGrammarRequest::token() const {
  // @@protoc_insertion_point(field_get:sarmata.DefineGrammarRequest.token)
  return token_.GetNoArena();
}
void DefineGrammarRequest::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.DefineGrammarRequest.token)
}
#if LANG_CXX11
void DefineGrammarRequest::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.DefineGrammarRequest.token)
}
#endif
void DefineGrammarRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.DefineGrammarRequest.token)
}
void DefineGrammarRequest::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.DefineGrammarRequest.token)
}
::std::string* DefineGrammarRequest::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.DefineGrammarRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DefineGrammarRequest::release_token() {
  // @@protoc_insertion_point(field_release:sarmata.DefineGrammarRequest.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DefineGrammarRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:sarmata.DefineGrammarRequest.token)
}

// string name = 2;
void DefineGrammarRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DefineGrammarRequest::name() const {
  // @@protoc_insertion_point(field_get:sarmata.DefineGrammarRequest.name)
  return name_.GetNoArena();
}
void DefineGrammarRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.DefineGrammarRequest.name)
}
#if LANG_CXX11
void DefineGrammarRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.DefineGrammarRequest.name)
}
#endif
void DefineGrammarRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.DefineGrammarRequest.name)
}
void DefineGrammarRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.DefineGrammarRequest.name)
}
::std::string* DefineGrammarRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.DefineGrammarRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DefineGrammarRequest::release_name() {
  // @@protoc_insertion_point(field_release:sarmata.DefineGrammarRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DefineGrammarRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:sarmata.DefineGrammarRequest.name)
}

// string grammar = 3;
void DefineGrammarRequest::clear_grammar() {
  grammar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DefineGrammarRequest::grammar() const {
  // @@protoc_insertion_point(field_get:sarmata.DefineGrammarRequest.grammar)
  return grammar_.GetNoArena();
}
void DefineGrammarRequest::set_grammar(const ::std::string& value) {
  
  grammar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.DefineGrammarRequest.grammar)
}
#if LANG_CXX11
void DefineGrammarRequest::set_grammar(::std::string&& value) {
  
  grammar_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.DefineGrammarRequest.grammar)
}
#endif
void DefineGrammarRequest::set_grammar(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  grammar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.DefineGrammarRequest.grammar)
}
void DefineGrammarRequest::set_grammar(const char* value, size_t size) {
  
  grammar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.DefineGrammarRequest.grammar)
}
::std::string* DefineGrammarRequest::mutable_grammar() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.DefineGrammarRequest.grammar)
  return grammar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DefineGrammarRequest::release_grammar() {
  // @@protoc_insertion_point(field_release:sarmata.DefineGrammarRequest.grammar)
  
  return grammar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DefineGrammarRequest::set_allocated_grammar(::std::string* grammar) {
  if (grammar != NULL) {
    
  } else {
    
  }
  grammar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), grammar);
  // @@protoc_insertion_point(field_set_allocated:sarmata.DefineGrammarRequest.grammar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DefineGrammarResponse::kStatusFieldNumber;
const int DefineGrammarResponse::kErrorFieldNumber;
const int DefineGrammarResponse::kOkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DefineGrammarResponse::DefineGrammarResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_asr_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sarmata.DefineGrammarResponse)
}
DefineGrammarResponse::DefineGrammarResponse(const DefineGrammarResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&ok_) -
    reinterpret_cast<char*>(&status_)) + sizeof(ok_));
  // @@protoc_insertion_point(copy_constructor:sarmata.DefineGrammarResponse)
}

void DefineGrammarResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ok_) -
      reinterpret_cast<char*>(&status_)) + sizeof(ok_));
  _cached_size_ = 0;
}

DefineGrammarResponse::~DefineGrammarResponse() {
  // @@protoc_insertion_point(destructor:sarmata.DefineGrammarResponse)
  SharedDtor();
}

void DefineGrammarResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DefineGrammarResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DefineGrammarResponse::descriptor() {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DefineGrammarResponse& DefineGrammarResponse::default_instance() {
  protobuf_asr_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

DefineGrammarResponse* DefineGrammarResponse::New(::google::protobuf::Arena* arena) const {
  DefineGrammarResponse* n = new DefineGrammarResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DefineGrammarResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sarmata.DefineGrammarResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ok_) -
      reinterpret_cast<char*>(&status_)) + sizeof(ok_));
  _internal_metadata_.Clear();
}

bool DefineGrammarResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sarmata.DefineGrammarResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sarmata.ResponseStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::sarmata::ResponseStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sarmata.DefineGrammarResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ok = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sarmata.DefineGrammarResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sarmata.DefineGrammarResponse)
  return false;
#undef DO_
}

void DefineGrammarResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sarmata.DefineGrammarResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sarmata.ResponseStatus status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.DefineGrammarResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // bool ok = 3;
  if (this->ok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ok(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sarmata.DefineGrammarResponse)
}

::google::protobuf::uint8* DefineGrammarResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sarmata.DefineGrammarResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sarmata.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.DefineGrammarResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // bool ok = 3;
  if (this->ok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ok(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sarmata.DefineGrammarResponse)
  return target;
}

size_t DefineGrammarResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sarmata.DefineGrammarResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .sarmata.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // bool ok = 3;
  if (this->ok() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DefineGrammarResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sarmata.DefineGrammarResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DefineGrammarResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DefineGrammarResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sarmata.DefineGrammarResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sarmata.DefineGrammarResponse)
    MergeFrom(*source);
  }
}

void DefineGrammarResponse::MergeFrom(const DefineGrammarResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sarmata.DefineGrammarResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.ok() != 0) {
    set_ok(from.ok());
  }
}

void DefineGrammarResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sarmata.DefineGrammarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefineGrammarResponse::CopyFrom(const DefineGrammarResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sarmata.DefineGrammarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefineGrammarResponse::IsInitialized() const {
  return true;
}

void DefineGrammarResponse::Swap(DefineGrammarResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DefineGrammarResponse::InternalSwap(DefineGrammarResponse* other) {
  using std::swap;
  error_.Swap(&other->error_);
  swap(status_, other->status_);
  swap(ok_, other->ok_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DefineGrammarResponse::GetMetadata() const {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DefineGrammarResponse

// .sarmata.ResponseStatus status = 1;
void DefineGrammarResponse::clear_status() {
  status_ = 0;
}
::sarmata::ResponseStatus DefineGrammarResponse::status() const {
  // @@protoc_insertion_point(field_get:sarmata.DefineGrammarResponse.status)
  return static_cast< ::sarmata::ResponseStatus >(status_);
}
void DefineGrammarResponse::set_status(::sarmata::ResponseStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:sarmata.DefineGrammarResponse.status)
}

// string error = 2;
void DefineGrammarResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DefineGrammarResponse::error() const {
  // @@protoc_insertion_point(field_get:sarmata.DefineGrammarResponse.error)
  return error_.GetNoArena();
}
void DefineGrammarResponse::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.DefineGrammarResponse.error)
}
#if LANG_CXX11
void DefineGrammarResponse::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.DefineGrammarResponse.error)
}
#endif
void DefineGrammarResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.DefineGrammarResponse.error)
}
void DefineGrammarResponse::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.DefineGrammarResponse.error)
}
::std::string* DefineGrammarResponse::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.DefineGrammarResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DefineGrammarResponse::release_error() {
  // @@protoc_insertion_point(field_release:sarmata.DefineGrammarResponse.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DefineGrammarResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:sarmata.DefineGrammarResponse.error)
}

// bool ok = 3;
void DefineGrammarResponse::clear_ok() {
  ok_ = false;
}
bool DefineGrammarResponse::ok() const {
  // @@protoc_insertion_point(field_get:sarmata.DefineGrammarResponse.ok)
  return ok_;
}
void DefineGrammarResponse::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:sarmata.DefineGrammarResponse.ok)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecognizeResponse::kStatusFieldNumber;
const int RecognizeResponse::kErrorFieldNumber;
const int RecognizeResponse::kWarningFieldNumber;
const int RecognizeResponse::kEventTimeFieldNumber;
const int RecognizeResponse::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecognizeResponse::RecognizeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_asr_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sarmata.RecognizeResponse)
}
RecognizeResponse::RecognizeResponse(const RecognizeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  warning_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.warning().size() > 0) {
    warning_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warning_);
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&event_time_) -
    reinterpret_cast<char*>(&status_)) + sizeof(event_time_));
  // @@protoc_insertion_point(copy_constructor:sarmata.RecognizeResponse)
}

void RecognizeResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warning_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_time_) -
      reinterpret_cast<char*>(&status_)) + sizeof(event_time_));
  _cached_size_ = 0;
}

RecognizeResponse::~RecognizeResponse() {
  // @@protoc_insertion_point(destructor:sarmata.RecognizeResponse)
  SharedDtor();
}

void RecognizeResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warning_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecognizeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecognizeResponse::descriptor() {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecognizeResponse& RecognizeResponse::default_instance() {
  protobuf_asr_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

RecognizeResponse* RecognizeResponse::New(::google::protobuf::Arena* arena) const {
  RecognizeResponse* n = new RecognizeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecognizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sarmata.RecognizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warning_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_time_) -
      reinterpret_cast<char*>(&status_)) + sizeof(event_time_));
  _internal_metadata_.Clear();
}

bool RecognizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sarmata.RecognizeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sarmata.ResponseStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::sarmata::ResponseStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sarmata.RecognizeResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string warning = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warning()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warning().data(), static_cast<int>(this->warning().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sarmata.RecognizeResponse.warning"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 event_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &event_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sarmata.Phrase results = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sarmata.RecognizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sarmata.RecognizeResponse)
  return false;
#undef DO_
}

void RecognizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sarmata.RecognizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sarmata.ResponseStatus status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.RecognizeResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // string warning = 3;
  if (this->warning().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warning().data(), static_cast<int>(this->warning().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.RecognizeResponse.warning");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->warning(), output);
  }

  // int32 event_time = 4;
  if (this->event_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->event_time(), output);
  }

  // repeated .sarmata.Phrase results = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sarmata.RecognizeResponse)
}

::google::protobuf::uint8* RecognizeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sarmata.RecognizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sarmata.ResponseStatus status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.RecognizeResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // string warning = 3;
  if (this->warning().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warning().data(), static_cast<int>(this->warning().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.RecognizeResponse.warning");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->warning(), target);
  }

  // int32 event_time = 4;
  if (this->event_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->event_time(), target);
  }

  // repeated .sarmata.Phrase results = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sarmata.RecognizeResponse)
  return target;
}

size_t RecognizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sarmata.RecognizeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .sarmata.Phrase results = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->results(static_cast<int>(i)));
    }
  }

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // string warning = 3;
  if (this->warning().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->warning());
  }

  // .sarmata.ResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // int32 event_time = 4;
  if (this->event_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->event_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecognizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sarmata.RecognizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognizeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecognizeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sarmata.RecognizeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sarmata.RecognizeResponse)
    MergeFrom(*source);
  }
}

void RecognizeResponse::MergeFrom(const RecognizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sarmata.RecognizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.warning().size() > 0) {

    warning_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.warning_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.event_time() != 0) {
    set_event_time(from.event_time());
  }
}

void RecognizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sarmata.RecognizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognizeResponse::CopyFrom(const RecognizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sarmata.RecognizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognizeResponse::IsInitialized() const {
  return true;
}

void RecognizeResponse::Swap(RecognizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecognizeResponse::InternalSwap(RecognizeResponse* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  error_.Swap(&other->error_);
  warning_.Swap(&other->warning_);
  swap(status_, other->status_);
  swap(event_time_, other->event_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecognizeResponse::GetMetadata() const {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecognizeResponse

// .sarmata.ResponseStatus status = 1;
void RecognizeResponse::clear_status() {
  status_ = 0;
}
::sarmata::ResponseStatus RecognizeResponse::status() const {
  // @@protoc_insertion_point(field_get:sarmata.RecognizeResponse.status)
  return static_cast< ::sarmata::ResponseStatus >(status_);
}
void RecognizeResponse::set_status(::sarmata::ResponseStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:sarmata.RecognizeResponse.status)
}

// string error = 2;
void RecognizeResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RecognizeResponse::error() const {
  // @@protoc_insertion_point(field_get:sarmata.RecognizeResponse.error)
  return error_.GetNoArena();
}
void RecognizeResponse::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.RecognizeResponse.error)
}
#if LANG_CXX11
void RecognizeResponse::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.RecognizeResponse.error)
}
#endif
void RecognizeResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.RecognizeResponse.error)
}
void RecognizeResponse::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.RecognizeResponse.error)
}
::std::string* RecognizeResponse::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.RecognizeResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RecognizeResponse::release_error() {
  // @@protoc_insertion_point(field_release:sarmata.RecognizeResponse.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RecognizeResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:sarmata.RecognizeResponse.error)
}

// string warning = 3;
void RecognizeResponse::clear_warning() {
  warning_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RecognizeResponse::warning() const {
  // @@protoc_insertion_point(field_get:sarmata.RecognizeResponse.warning)
  return warning_.GetNoArena();
}
void RecognizeResponse::set_warning(const ::std::string& value) {
  
  warning_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.RecognizeResponse.warning)
}
#if LANG_CXX11
void RecognizeResponse::set_warning(::std::string&& value) {
  
  warning_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.RecognizeResponse.warning)
}
#endif
void RecognizeResponse::set_warning(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  warning_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.RecognizeResponse.warning)
}
void RecognizeResponse::set_warning(const char* value, size_t size) {
  
  warning_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.RecognizeResponse.warning)
}
::std::string* RecognizeResponse::mutable_warning() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.RecognizeResponse.warning)
  return warning_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RecognizeResponse::release_warning() {
  // @@protoc_insertion_point(field_release:sarmata.RecognizeResponse.warning)
  
  return warning_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RecognizeResponse::set_allocated_warning(::std::string* warning) {
  if (warning != NULL) {
    
  } else {
    
  }
  warning_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warning);
  // @@protoc_insertion_point(field_set_allocated:sarmata.RecognizeResponse.warning)
}

// int32 event_time = 4;
void RecognizeResponse::clear_event_time() {
  event_time_ = 0;
}
::google::protobuf::int32 RecognizeResponse::event_time() const {
  // @@protoc_insertion_point(field_get:sarmata.RecognizeResponse.event_time)
  return event_time_;
}
void RecognizeResponse::set_event_time(::google::protobuf::int32 value) {
  
  event_time_ = value;
  // @@protoc_insertion_point(field_set:sarmata.RecognizeResponse.event_time)
}

// repeated .sarmata.Phrase results = 5;
int RecognizeResponse::results_size() const {
  return results_.size();
}
void RecognizeResponse::clear_results() {
  results_.Clear();
}
const ::sarmata::Phrase& RecognizeResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:sarmata.RecognizeResponse.results)
  return results_.Get(index);
}
::sarmata::Phrase* RecognizeResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:sarmata.RecognizeResponse.results)
  return results_.Mutable(index);
}
::sarmata::Phrase* RecognizeResponse::add_results() {
  // @@protoc_insertion_point(field_add:sarmata.RecognizeResponse.results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::sarmata::Phrase >*
RecognizeResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:sarmata.RecognizeResponse.results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::sarmata::Phrase >&
RecognizeResponse::results() const {
  // @@protoc_insertion_point(field_list:sarmata.RecognizeResponse.results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Phrase_Word::kTranscriptFieldNumber;
const int Phrase_Word::kConfidenceFieldNumber;
const int Phrase_Word::kStartFieldNumber;
const int Phrase_Word::kEndFieldNumber;
const int Phrase_Word::kLogprobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Phrase_Word::Phrase_Word()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_asr_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sarmata.Phrase.Word)
}
Phrase_Word::Phrase_Word(const Phrase_Word& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transcript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transcript().size() > 0) {
    transcript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transcript_);
  }
  ::memcpy(&confidence_, &from.confidence_,
    static_cast<size_t>(reinterpret_cast<char*>(&logprob_) -
    reinterpret_cast<char*>(&confidence_)) + sizeof(logprob_));
  // @@protoc_insertion_point(copy_constructor:sarmata.Phrase.Word)
}

void Phrase_Word::SharedCtor() {
  transcript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logprob_) -
      reinterpret_cast<char*>(&confidence_)) + sizeof(logprob_));
  _cached_size_ = 0;
}

Phrase_Word::~Phrase_Word() {
  // @@protoc_insertion_point(destructor:sarmata.Phrase.Word)
  SharedDtor();
}

void Phrase_Word::SharedDtor() {
  transcript_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Phrase_Word::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Phrase_Word::descriptor() {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Phrase_Word& Phrase_Word::default_instance() {
  protobuf_asr_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Phrase_Word* Phrase_Word::New(::google::protobuf::Arena* arena) const {
  Phrase_Word* n = new Phrase_Word;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Phrase_Word::Clear() {
// @@protoc_insertion_point(message_clear_start:sarmata.Phrase.Word)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transcript_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logprob_) -
      reinterpret_cast<char*>(&confidence_)) + sizeof(logprob_));
  _internal_metadata_.Clear();
}

bool Phrase_Word::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sarmata.Phrase.Word)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string transcript = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transcript()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transcript().data(), static_cast<int>(this->transcript().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sarmata.Phrase.Word.transcript"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 start = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 end = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double logprob = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &logprob_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sarmata.Phrase.Word)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sarmata.Phrase.Word)
  return false;
#undef DO_
}

void Phrase_Word::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sarmata.Phrase.Word)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transcript = 1;
  if (this->transcript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transcript().data(), static_cast<int>(this->transcript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.Phrase.Word.transcript");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->transcript(), output);
  }

  // double confidence = 2;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->confidence(), output);
  }

  // int32 start = 3;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->start(), output);
  }

  // int32 end = 4;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->end(), output);
  }

  // double logprob = 5;
  if (this->logprob() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->logprob(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sarmata.Phrase.Word)
}

::google::protobuf::uint8* Phrase_Word::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sarmata.Phrase.Word)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transcript = 1;
  if (this->transcript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transcript().data(), static_cast<int>(this->transcript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.Phrase.Word.transcript");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->transcript(), target);
  }

  // double confidence = 2;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->confidence(), target);
  }

  // int32 start = 3;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->start(), target);
  }

  // int32 end = 4;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->end(), target);
  }

  // double logprob = 5;
  if (this->logprob() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->logprob(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sarmata.Phrase.Word)
  return target;
}

size_t Phrase_Word::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sarmata.Phrase.Word)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string transcript = 1;
  if (this->transcript().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transcript());
  }

  // double confidence = 2;
  if (this->confidence() != 0) {
    total_size += 1 + 8;
  }

  // int32 start = 3;
  if (this->start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->start());
  }

  // int32 end = 4;
  if (this->end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->end());
  }

  // double logprob = 5;
  if (this->logprob() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Phrase_Word::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sarmata.Phrase.Word)
  GOOGLE_DCHECK_NE(&from, this);
  const Phrase_Word* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Phrase_Word>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sarmata.Phrase.Word)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sarmata.Phrase.Word)
    MergeFrom(*source);
  }
}

void Phrase_Word::MergeFrom(const Phrase_Word& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sarmata.Phrase.Word)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transcript().size() > 0) {

    transcript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transcript_);
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.logprob() != 0) {
    set_logprob(from.logprob());
  }
}

void Phrase_Word::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sarmata.Phrase.Word)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Phrase_Word::CopyFrom(const Phrase_Word& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sarmata.Phrase.Word)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Phrase_Word::IsInitialized() const {
  return true;
}

void Phrase_Word::Swap(Phrase_Word* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Phrase_Word::InternalSwap(Phrase_Word* other) {
  using std::swap;
  transcript_.Swap(&other->transcript_);
  swap(confidence_, other->confidence_);
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(logprob_, other->logprob_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Phrase_Word::GetMetadata() const {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Phrase_Word

// string transcript = 1;
void Phrase_Word::clear_transcript() {
  transcript_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Phrase_Word::transcript() const {
  // @@protoc_insertion_point(field_get:sarmata.Phrase.Word.transcript)
  return transcript_.GetNoArena();
}
void Phrase_Word::set_transcript(const ::std::string& value) {
  
  transcript_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.Phrase.Word.transcript)
}
#if LANG_CXX11
void Phrase_Word::set_transcript(::std::string&& value) {
  
  transcript_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.Phrase.Word.transcript)
}
#endif
void Phrase_Word::set_transcript(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transcript_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.Phrase.Word.transcript)
}
void Phrase_Word::set_transcript(const char* value, size_t size) {
  
  transcript_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.Phrase.Word.transcript)
}
::std::string* Phrase_Word::mutable_transcript() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.Phrase.Word.transcript)
  return transcript_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Phrase_Word::release_transcript() {
  // @@protoc_insertion_point(field_release:sarmata.Phrase.Word.transcript)
  
  return transcript_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Phrase_Word::set_allocated_transcript(::std::string* transcript) {
  if (transcript != NULL) {
    
  } else {
    
  }
  transcript_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transcript);
  // @@protoc_insertion_point(field_set_allocated:sarmata.Phrase.Word.transcript)
}

// double confidence = 2;
void Phrase_Word::clear_confidence() {
  confidence_ = 0;
}
double Phrase_Word::confidence() const {
  // @@protoc_insertion_point(field_get:sarmata.Phrase.Word.confidence)
  return confidence_;
}
void Phrase_Word::set_confidence(double value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:sarmata.Phrase.Word.confidence)
}

// int32 start = 3;
void Phrase_Word::clear_start() {
  start_ = 0;
}
::google::protobuf::int32 Phrase_Word::start() const {
  // @@protoc_insertion_point(field_get:sarmata.Phrase.Word.start)
  return start_;
}
void Phrase_Word::set_start(::google::protobuf::int32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:sarmata.Phrase.Word.start)
}

// int32 end = 4;
void Phrase_Word::clear_end() {
  end_ = 0;
}
::google::protobuf::int32 Phrase_Word::end() const {
  // @@protoc_insertion_point(field_get:sarmata.Phrase.Word.end)
  return end_;
}
void Phrase_Word::set_end(::google::protobuf::int32 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:sarmata.Phrase.Word.end)
}

// double logprob = 5;
void Phrase_Word::clear_logprob() {
  logprob_ = 0;
}
double Phrase_Word::logprob() const {
  // @@protoc_insertion_point(field_get:sarmata.Phrase.Word.logprob)
  return logprob_;
}
void Phrase_Word::set_logprob(double value) {
  
  logprob_ = value;
  // @@protoc_insertion_point(field_set:sarmata.Phrase.Word.logprob)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Phrase::kWordsFieldNumber;
const int Phrase::kConfidenceFieldNumber;
const int Phrase::kCorrectFieldNumber;
const int Phrase::kSemanticInterpretationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Phrase::Phrase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_asr_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sarmata.Phrase)
}
Phrase::Phrase(const Phrase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      words_(from.words_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  semantic_interpretation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.semantic_interpretation().size() > 0) {
    semantic_interpretation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.semantic_interpretation_);
  }
  ::memcpy(&confidence_, &from.confidence_,
    static_cast<size_t>(reinterpret_cast<char*>(&correct_) -
    reinterpret_cast<char*>(&confidence_)) + sizeof(correct_));
  // @@protoc_insertion_point(copy_constructor:sarmata.Phrase)
}

void Phrase::SharedCtor() {
  semantic_interpretation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&correct_) -
      reinterpret_cast<char*>(&confidence_)) + sizeof(correct_));
  _cached_size_ = 0;
}

Phrase::~Phrase() {
  // @@protoc_insertion_point(destructor:sarmata.Phrase)
  SharedDtor();
}

void Phrase::SharedDtor() {
  semantic_interpretation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Phrase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Phrase::descriptor() {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Phrase& Phrase::default_instance() {
  protobuf_asr_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Phrase* Phrase::New(::google::protobuf::Arena* arena) const {
  Phrase* n = new Phrase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Phrase::Clear() {
// @@protoc_insertion_point(message_clear_start:sarmata.Phrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  words_.Clear();
  semantic_interpretation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&confidence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&correct_) -
      reinterpret_cast<char*>(&confidence_)) + sizeof(correct_));
  _internal_metadata_.Clear();
}

bool Phrase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sarmata.Phrase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sarmata.Phrase.Word words = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_words()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool correct = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &correct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string semantic_interpretation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_semantic_interpretation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->semantic_interpretation().data(), static_cast<int>(this->semantic_interpretation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sarmata.Phrase.semantic_interpretation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sarmata.Phrase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sarmata.Phrase)
  return false;
#undef DO_
}

void Phrase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sarmata.Phrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sarmata.Phrase.Word words = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->words_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->words(static_cast<int>(i)), output);
  }

  // double confidence = 2;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->confidence(), output);
  }

  // bool correct = 3;
  if (this->correct() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->correct(), output);
  }

  // string semantic_interpretation = 4;
  if (this->semantic_interpretation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->semantic_interpretation().data(), static_cast<int>(this->semantic_interpretation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.Phrase.semantic_interpretation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->semantic_interpretation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sarmata.Phrase)
}

::google::protobuf::uint8* Phrase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sarmata.Phrase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sarmata.Phrase.Word words = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->words_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->words(static_cast<int>(i)), deterministic, target);
  }

  // double confidence = 2;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->confidence(), target);
  }

  // bool correct = 3;
  if (this->correct() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->correct(), target);
  }

  // string semantic_interpretation = 4;
  if (this->semantic_interpretation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->semantic_interpretation().data(), static_cast<int>(this->semantic_interpretation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sarmata.Phrase.semantic_interpretation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->semantic_interpretation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sarmata.Phrase)
  return target;
}

size_t Phrase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sarmata.Phrase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .sarmata.Phrase.Word words = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->words_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->words(static_cast<int>(i)));
    }
  }

  // string semantic_interpretation = 4;
  if (this->semantic_interpretation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->semantic_interpretation());
  }

  // double confidence = 2;
  if (this->confidence() != 0) {
    total_size += 1 + 8;
  }

  // bool correct = 3;
  if (this->correct() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Phrase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sarmata.Phrase)
  GOOGLE_DCHECK_NE(&from, this);
  const Phrase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Phrase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sarmata.Phrase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sarmata.Phrase)
    MergeFrom(*source);
  }
}

void Phrase::MergeFrom(const Phrase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sarmata.Phrase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  words_.MergeFrom(from.words_);
  if (from.semantic_interpretation().size() > 0) {

    semantic_interpretation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.semantic_interpretation_);
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.correct() != 0) {
    set_correct(from.correct());
  }
}

void Phrase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sarmata.Phrase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Phrase::CopyFrom(const Phrase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sarmata.Phrase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Phrase::IsInitialized() const {
  return true;
}

void Phrase::Swap(Phrase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Phrase::InternalSwap(Phrase* other) {
  using std::swap;
  words_.InternalSwap(&other->words_);
  semantic_interpretation_.Swap(&other->semantic_interpretation_);
  swap(confidence_, other->confidence_);
  swap(correct_, other->correct_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Phrase::GetMetadata() const {
  protobuf_asr_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_asr_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Phrase

// repeated .sarmata.Phrase.Word words = 1;
int Phrase::words_size() const {
  return words_.size();
}
void Phrase::clear_words() {
  words_.Clear();
}
const ::sarmata::Phrase_Word& Phrase::words(int index) const {
  // @@protoc_insertion_point(field_get:sarmata.Phrase.words)
  return words_.Get(index);
}
::sarmata::Phrase_Word* Phrase::mutable_words(int index) {
  // @@protoc_insertion_point(field_mutable:sarmata.Phrase.words)
  return words_.Mutable(index);
}
::sarmata::Phrase_Word* Phrase::add_words() {
  // @@protoc_insertion_point(field_add:sarmata.Phrase.words)
  return words_.Add();
}
::google::protobuf::RepeatedPtrField< ::sarmata::Phrase_Word >*
Phrase::mutable_words() {
  // @@protoc_insertion_point(field_mutable_list:sarmata.Phrase.words)
  return &words_;
}
const ::google::protobuf::RepeatedPtrField< ::sarmata::Phrase_Word >&
Phrase::words() const {
  // @@protoc_insertion_point(field_list:sarmata.Phrase.words)
  return words_;
}

// double confidence = 2;
void Phrase::clear_confidence() {
  confidence_ = 0;
}
double Phrase::confidence() const {
  // @@protoc_insertion_point(field_get:sarmata.Phrase.confidence)
  return confidence_;
}
void Phrase::set_confidence(double value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:sarmata.Phrase.confidence)
}

// bool correct = 3;
void Phrase::clear_correct() {
  correct_ = false;
}
bool Phrase::correct() const {
  // @@protoc_insertion_point(field_get:sarmata.Phrase.correct)
  return correct_;
}
void Phrase::set_correct(bool value) {
  
  correct_ = value;
  // @@protoc_insertion_point(field_set:sarmata.Phrase.correct)
}

// string semantic_interpretation = 4;
void Phrase::clear_semantic_interpretation() {
  semantic_interpretation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Phrase::semantic_interpretation() const {
  // @@protoc_insertion_point(field_get:sarmata.Phrase.semantic_interpretation)
  return semantic_interpretation_.GetNoArena();
}
void Phrase::set_semantic_interpretation(const ::std::string& value) {
  
  semantic_interpretation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sarmata.Phrase.semantic_interpretation)
}
#if LANG_CXX11
void Phrase::set_semantic_interpretation(::std::string&& value) {
  
  semantic_interpretation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sarmata.Phrase.semantic_interpretation)
}
#endif
void Phrase::set_semantic_interpretation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  semantic_interpretation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sarmata.Phrase.semantic_interpretation)
}
void Phrase::set_semantic_interpretation(const char* value, size_t size) {
  
  semantic_interpretation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sarmata.Phrase.semantic_interpretation)
}
::std::string* Phrase::mutable_semantic_interpretation() {
  
  // @@protoc_insertion_point(field_mutable:sarmata.Phrase.semantic_interpretation)
  return semantic_interpretation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Phrase::release_semantic_interpretation() {
  // @@protoc_insertion_point(field_release:sarmata.Phrase.semantic_interpretation)
  
  return semantic_interpretation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Phrase::set_allocated_semantic_interpretation(::std::string* semantic_interpretation) {
  if (semantic_interpretation != NULL) {
    
  } else {
    
  }
  semantic_interpretation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), semantic_interpretation);
  // @@protoc_insertion_point(field_set_allocated:sarmata.Phrase.semantic_interpretation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace sarmata

// @@protoc_insertion_point(global_scope)
